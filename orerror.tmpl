#ifndef ORERROR_TMPL__
#define ORERROR_TMPL__

#include "serialise.H"

#include "either.tmpl"

template <typename t> void
orerror<t>::operator=(const t &w) {
    if (errored) {
        err.~error();
        new (&inner) t(w);
        errored = false; }
    else inner = w; }

template <typename t> void
orerror<t>::serialise(serialise1 &s) const {
    s.push(errored);
    if (errored) s.push(err);
    else s.push(inner); }

template <typename t> const fields::field &
orerror<t>::field() const {
    if (isfailure()) return "<failed:" + failure().field() + ">";
    else return "<" + fields::mk(success()) + ">"; }

#endif /* !ORERROR_TMPL__ */
