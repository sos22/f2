#ifndef MUTEX_TMPL__
#define MUTEX_TMPL__

template <typename t> t
mutex_t::locked(const std::function<t (mutex_t::token)> &f) {
    auto _token(lock());
    auto res(f(_token));
    unlock(&_token);
    return res; }

template <typename t> t
mutex_t::locked(const std::function<t (void)> &f) {
    auto _token(lock());
    auto res(f());
    unlock(&_token);
    return res; }

#endif /* !MUTEX_TMPL__ */
