#ifndef FIELDS_TMPL__
#define FIELDS_TMPL__

#include "crashhandler.H"
#include "fields.H"

#include "maybe.tmpl"

namespace fields {
template <typename t> const field &
mk(const t *const &what) {
    if (!what) return mk("NULL");
    else return "[" + mk(*what) + "]"; }
template <typename t> const field &
mk(t *const &what) { return mk(const_cast<const t *>(what)); }
template <typename t> const field &
mkptr(const t *const &what) {
    return mk((unsigned long)what).base(16).sep(colon, 4).hidebase(); }
template <typename t> const field &
mk(const t &what) { return what.field(); }
template <typename t> const field &
mk(const t &what, crashcontext ctxt) { return what.field(ctxt); } }

#endif /* !FIELDS_TMPL__ */
