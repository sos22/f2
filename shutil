# A bunch of helpers for building makefiles

set -e

mkfile=$1

. config

cat <<EOF
$mkfile: $0 shutil config
clean::
	rm -f $mkfile
EOF

# Emit a link rule.  First argument is binary, other arguments are
# source objects.
function ld() {
    local target=$1
    shift
    x=${@/%.o/-c.o}
    x=${x/%.a/-c.a}
    cat <<EOF
$target: $* $mkfile
	gcc -o \$@.tmp $* -lstdc++ -lrt -lpthread && mv -f \$@.tmp \$@
${target}-c: $x $mkfile
	gcc -fprofile-arcs  -o \$@.tmp $x -lstdc++ -lrt -lpthread && mv -f \$@.tmp \$@
clean::
	rm -f $target $target.tmp ${target}-c.tmp ${target}-c
EOF
}

# Emit compile rules.  First argument is source, others are added to
# compiler flags.  Language inferred from extension.
function cc() {
    local src=$1
    shift
    local extension=${src##*.}
    case $extension in
	C)
	    local obj=${src%.C}.o
	    local dep=${src%.C}.d
	    cat <<EOF
include $dep
$obj: $src config
	g++ -DCOVERAGE=0 ${CPPFLAGS} ${CXXFLAGS} -c -MD -MT "$obj ${obj/.o/-c.o}" -MF ${dep}.tmp -o ${obj}.tmp \$< && mv ${dep}.tmp ${dep} && mv ${obj}.tmp \$@
${obj/.o/-c.o}: $src config
	g++ -DCOVERAGE=1 -fprofile-arcs -ftest-coverage ${CPPFLAGS} ${CXXFLAGS} -c -o ${obj}-c.tmp \$< && mv ${obj}-c.tmp \$@
$dep: $src config
	g++ ${CPPFLAGS} -M -MT "$obj ${obj/.o/-c.o}" -MF ${dep}.tmp $src \$< && mv ${dep}.tmp ${dep}
clean::
	rm -f $dep $obj ${obj/.o/-c.o} ${obj}.tmp ${obj}-c.tmp
EOF
	    ;;
	*)
	    echo "Unknown language extension \`\`$extension'' (for $src)" >&2
	    exit 1
	    ;;
    esac
}

# Build an archive from a bunch of object files.
function ar() {
    local target=$1
    shift
    cat <<EOF
$target: $*
	ar cqs \$@.tmp $* && mv \$@.tmp \$@
${target/%.a/-c.a}: ${@/%.o/-c.o}
	ar cqs \$@.tmp ${@/%.o/-c.o} && mv \$@.tmp \$@
clean::
	rm -f $target ${target/%.a/-c.a}
EOF
}

function target()
{
    cat <<EOF
realall:: $1
covall:: ${1}-c
EOF
}

function testmodule()
{
    local targ=$1
    shift
    stripnr=$(pwd | sed 's,[^/],,g' | wc -c)
    newprefix=$(pwd)/${targ}-cov.d
    reports=$(echo $@ | sed "s/\(\$\| \)/.gcov\1/g;s,\(^\| \),\1${newprefix}/,g" )
    cat <<EOF
${targ}-cov-report: test-c
	rm -rf ${newprefix} && mkdir ${newprefix} && GCOV_PREFIX_STRIP=${stripnr} GCOV_PREFIX="${newprefix}" ./test-c ${targ} '*' && (cd ${newprefix} ; ln -s ../*.C ../*.gcno ../*.H ../*.tmpl . ; gcov *.gcda) > /dev/null && cat ${reports} > \$@
.PHONY: ${targ}-cov
${targ}-cov: ${targ}-cov-report
	@if grep -q '#####' ${targ}-cov-report; then echo "${targ} FAILED"; false; else echo "${targ} passed"; true; fi
coverage:: ${targ}-cov
clean::
	rm -rf ${targ}-cov.d
	rm -f ${targ}-cov-report
EOF
}
