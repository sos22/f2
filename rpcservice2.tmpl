#ifndef RPCSERVICE2_TMPL__
#define RPCSERVICE2_TMPL__

template <typename t, typename ... args> orerror<nnp<t> >
rpcservice2::listen(
    clientio io,
    const clustername &cn,
    const agentname &sn,
    const peername &pn,
    args && ... params) {
    return listen<t>(io,
                     rpcservice2config::dflt(cn, sn),
                     pn,
                     std::forward<args>(params)...); }

template <typename t, typename ... args> orerror<nnp<t> >
rpcservice2::listen(
    clientio io,
    const rpcservice2config &config,
    const peername &pn,
    args && ... params) {
    auto fd(open(pn));
    if (fd.isfailure()) return fd.failure();
    auto res(new t(constoken(fd.success(), pn, config),
                   std::forward<args>(params)...));
    auto r(res->_initialise(io));
    if (r.isfailure()) return r.failure();
    else return _nnp(*res); }

#endif /* RPCSERVICE2_TMPL__ */
